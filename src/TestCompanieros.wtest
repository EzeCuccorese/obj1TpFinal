import Experimentos.*
import Rick.*
import Materiales.*
import Companieros.*

object materialCaro{
	method energiaRequerida() = 9999999999		
}
describe  "morty"{
	
		const lata = new Lata(10)
		const latota = new Lata(400)
		const fleebito = new Fleeb(20)
		const cable = new Cable(10,3)
		
		test "lugar mochila"{
			morty.modificarEnergia(500)
			morty.recolectar(lata)
			morty.recolectar(fleebito)
			morty.recolectar(cable)
			assert.notThat(morty.hayLugarEnMochila())	
		}
		
		
		test "recolectar Material Caro lanza error"{
			assert.throwsException({morty.recolectar(materialCaro)})
		}
		
		test "no puedo recolectar "{
			assert.notThat(morty.energiaSuficienteParaRecolectar(lata))
			assert.notThat(morty.puedeRecolectar(lata))
		}
		
		test "dar objeto "{
			morty.modificarEnergia(50)
			morty.recolectar(lata)
			morty.darObjetosA(rick)
			assert.equals(#{lata},rick.materialesMochila())
			assert.that(morty.materialesMochila().isEmpty())
		}
		

		test "lugar en mochila en jerry ()"{
			jerry.modificarEnergia(500)
			jerry.recolectar(lata)
			jerry.recolectar(latota)
			jerry.recolectar(cable)
			assert.equals(3,jerry.tamanioMochila())
			assert.notThat(jerry.hayLugarEnMochila())	
			
			
		}
		test "lugar mochila en jerry sobreexitado"{
			jerry.modificarEnergia(500)
			jerry.recolectar(lata)
			jerry.recolectar(fleebito)
			jerry.recolectar(lata)
			assert.equals(3,jerry.tamanioMochila())
			assert.that(jerry.hayLugarEnMochila())	
		}
		
		
		
		test "recolectar Material Caro lanza error en jerry"{
			assert.throwsException({jerry.recolectar(materialCaro)})
		}
		
		test "no puedo recolectar en jerry "{
			assert.notThat(jerry.energiaSuficienteParaRecolectar(lata))
			assert.notThat(jerry.puedeRecolectar(lata))
		}
		
		test "dar objeto en jerry "{
			jerry.modificarEnergia(50)
			jerry.recolectar(lata)
			assert.equals(40,jerry.energia())
			jerry.darObjetosA(rick)
			assert.equals(#{lata},rick.materialesMochila())
			assert.that(jerry.materialesMochila().isEmpty())
		}
		
		test "lugar en mochila en summer "{
			summer.modificarEnergia(500)
			summer.recolectar(lata)
			summer.recolectar(latota)
			assert.equals(2,summer.tamanioMochila())
			assert.notThat(summer.hayLugarEnMochila())	
		}
		
		test "dar objeto en summer "{
			summer.modificarEnergia(50)
			summer.recolectar(lata)
			assert.equals(42,summer.energia())
			summer.darObjetosA(rick)
			assert.equals(#{lata},rick.materialesMochila())
			assert.that(summer.materialesMochila().isEmpty())
			assert.equals(32,summer.energia())
		}
		
		test" jerry malumorado"{
			jerry.modificarEnergia(50)
			jerry.recolectar(lata)
			assert.that(jerry.humor())
			rick.companero(jerry)
			assert.notThat(jerry.humor())
		}
		
}